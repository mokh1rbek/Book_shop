// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/example": {
            "get": {
                "description": "Get List Example",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Example"
                ],
                "summary": "Get List Example",
                "operationId": "get_list_example",
                "parameters": [
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetExampleBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListExampleResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argument",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Example",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Example"
                ],
                "summary": "Create Example",
                "operationId": "create_example",
                "parameters": [
                    {
                        "description": "CreateExampleRequestBody",
                        "name": "example",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateExample"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "GetExampleBody",
                        "schema": {
                            "$ref": "#/definitions/models.Example"
                        }
                    },
                    "400": {
                        "description": "Invalid Argument",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/example/{id}": {
            "get": {
                "description": "Get By Id Example",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Example"
                ],
                "summary": "Get By Id Example",
                "operationId": "get_by_id_example",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetExampleBody",
                        "schema": {
                            "$ref": "#/definitions/models.Example"
                        }
                    },
                    "400": {
                        "description": "Invalid Argument",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Example",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Example"
                ],
                "summary": "Update Example",
                "operationId": "update_example",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CreateExampleRequestBody",
                        "name": "Example",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateExample"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetExamplesBody",
                        "schema": {
                            "$ref": "#/definitions/models.Example"
                        }
                    },
                    "400": {
                        "description": "Invalid Argument",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete By Id Example",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Example"
                ],
                "summary": "Delete By Id Example",
                "operationId": "delete_by_id_example",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetExampleBody",
                        "schema": {
                            "$ref": "#/definitions/models.Example"
                        }
                    },
                    "400": {
                        "description": "Invalid Argument",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateExample": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        },
        "models.Example": {
            "type": "object",
            "properties": {
                "actor_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.GetListExampleResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "exapmle": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Example"
                    }
                }
            }
        },
        "models.UpdateExample": {
            "type": "object",
            "properties": {
                "actor_id": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
